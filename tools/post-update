#!/bin/sh
# 拉取server分支分代码到master分支；
# 通知中控机已收到代码；
export PATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"
export HOME="/home/git"
export zPathOnHost="__PROJ_PATH"

# 当前hook执行过程中要去掉执行权限，防止以下的git操作触发hook无限循环
chmod 0444 ${zPathOnHost}_SHADOW/.git/hooks/post-update

# 清除可能存在的由于 git 崩溃残留的锁文件
rm -f ${zPathOnHost}/.git/index.lock
rm -f ${zPathOnHost}_SHADOW/.git/index.lock

cd $zPathOnHost
export GIT_DIR="${zPathOnHost}/.git"
\ls -a | grep -Ev '^(\.|\.\.|\.git)$' | xargs rm -rf
git stash
git stash clear
git pull --force ./.git server:master >/dev/null 2>&1
git reset -q --hard `git log -1 server --format=%H`

cd ${zPathOnHost}_SHADOW
export GIT_DIR="${zPathOnHost}_SHADOW/.git"
\ls -a | grep -Ev '^(\.|\.\.|\.git)$' | xargs rm -rf
git stash
git stash clear
git pull --force ./.git server:master >/dev/null 2>&1
git reset -q --hard `git log -1 server --format=%H`

# 校验布署结果
cd ${zPathOnHost}
zMasterSig=`git log master -1 --format=%H`
zServerSig=`git log server -1 --format=%H`
if [[ $zMasterSig != $zServerSig
    || 0 -ne `git status --short | wc -l`
    || `cat ${zPathOnHost}_SHADOW/.____dp-SHA1.res` != `find . -path './.git' -prune -o -type f -print | sort | xargs cat | sha1sum | grep -oP '^\S+'` ]]
then
    chmod 0555 ${zPathOnHost}_SHADOW/.git/hooks/post-update  # 退出之前还原权限
    exit 255
fi

# 'B' 用于标识这是布署状态回复，'A' 用于标识远程主机初始化状态回复
cd ${zPathOnHost}_SHADOW  # 务必切换路径，回复脚本内用了相对路径
printf "\n\n[`date`]" >> /tmp/.____post-deploy.log 2>&1
sh -x ./tools/zclient_reply.sh "__MASTER_ADDR" "__MASTER_PORT" "B" "${zMasterSig}" >> /tmp/.____post-deploy.log 2>&1

# 其它额外的动作
sh -x ${zPathOnHost}_SHADOW/tools/zpost-update.sh ${zPathOnHost} >/tmp/zpost-update.log 2>/tmp/zpost-update.err &

# 更新 post-update
cp -f ${zPathOnHost}_SHADOW/tools/post-update ${zPathOnHost}_SHADOW/.git/hooks/post-update
chmod 0555 ${zPathOnHost}_SHADOW/.git/hooks/post-update

# 更新开机请求布署自身的脚本，设置为隐藏文件
cp ${zPathOnHost}_SHADOW/tools/____req-deploy.sh /home/git/.____req-deploy.sh
